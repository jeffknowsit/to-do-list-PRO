# ======================================================
# == Stage 1: Build the application using Maven and Java 17 ==
# ======================================================
FROM maven:3.8.5-openjdk-17 AS build

# Set the working directory inside the container
WORKDIR /app

# Copy the pom.xml first to leverage Docker's layer caching.
# If the pom.xml hasn't changed, Maven dependencies won't be re-downloaded.
COPY pom.xml .

# Download all the dependencies
RUN mvn dependency:go-offline

# Copy the rest of your application's source code
COPY src ./src

# Package the application, skipping the tests
RUN mvn package -DskipTests


# ======================================================
# == Stage 2: Create the final, lightweight runtime image ==
# ======================================================
FROM openjdk:17-jre-slim

# Set the working directory
WORKDIR /app

# Copy the compiled JAR file from the 'build' stage
# This is the only artifact we need from the build stage.
COPY --from=build /app/target/todolist-0.0.1-SNAPSHOT.jar app.jar

# Expose the port that the application runs on
EXPOSE 8080

# The command to run when the container starts
ENTRYPOINT ["java", "-jar", "app.jar"]